//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace TCCWP.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Atualizacao", Namespace="http://schemas.datacontract.org/2004/07/TCCWS")]
    public partial class Atualizacao : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.ClienteWS> clientesField;
        
        private System.DateTime dtAtualizadoField;
        
        private System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.PedidoWS> pedidosField;
        
        private System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.ProdutoWS> produtosField;
        
        private System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.ProdutoPedidoWS> produtospedidoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.ClienteWS> clientes {
            get {
                return this.clientesField;
            }
            set {
                if ((object.ReferenceEquals(this.clientesField, value) != true)) {
                    this.clientesField = value;
                    this.RaisePropertyChanged("clientes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dtAtualizado {
            get {
                return this.dtAtualizadoField;
            }
            set {
                if ((this.dtAtualizadoField.Equals(value) != true)) {
                    this.dtAtualizadoField = value;
                    this.RaisePropertyChanged("dtAtualizado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.PedidoWS> pedidos {
            get {
                return this.pedidosField;
            }
            set {
                if ((object.ReferenceEquals(this.pedidosField, value) != true)) {
                    this.pedidosField = value;
                    this.RaisePropertyChanged("pedidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.ProdutoWS> produtos {
            get {
                return this.produtosField;
            }
            set {
                if ((object.ReferenceEquals(this.produtosField, value) != true)) {
                    this.produtosField = value;
                    this.RaisePropertyChanged("produtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TCCWP.ServiceReference1.ProdutoPedidoWS> produtospedido {
            get {
                return this.produtospedidoField;
            }
            set {
                if ((object.ReferenceEquals(this.produtospedidoField, value) != true)) {
                    this.produtospedidoField = value;
                    this.RaisePropertyChanged("produtospedido");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClienteWS", Namespace="http://schemas.datacontract.org/2004/07/TCCWS")]
    public partial class ClienteWS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BairroField;
        
        private string CepField;
        
        private int CidadeField;
        
        private string ComplementoField;
        
        private string CpfField;
        
        private string EmailField;
        
        private string IdField;
        
        private string NomeField;
        
        private string NumeroField;
        
        private string RuaField;
        
        private string TelefoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bairro {
            get {
                return this.BairroField;
            }
            set {
                if ((object.ReferenceEquals(this.BairroField, value) != true)) {
                    this.BairroField = value;
                    this.RaisePropertyChanged("Bairro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cep {
            get {
                return this.CepField;
            }
            set {
                if ((object.ReferenceEquals(this.CepField, value) != true)) {
                    this.CepField = value;
                    this.RaisePropertyChanged("Cep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cidade {
            get {
                return this.CidadeField;
            }
            set {
                if ((this.CidadeField.Equals(value) != true)) {
                    this.CidadeField = value;
                    this.RaisePropertyChanged("Cidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Complemento {
            get {
                return this.ComplementoField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplementoField, value) != true)) {
                    this.ComplementoField = value;
                    this.RaisePropertyChanged("Complemento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cpf {
            get {
                return this.CpfField;
            }
            set {
                if ((object.ReferenceEquals(this.CpfField, value) != true)) {
                    this.CpfField = value;
                    this.RaisePropertyChanged("Cpf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroField, value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rua {
            get {
                return this.RuaField;
            }
            set {
                if ((object.ReferenceEquals(this.RuaField, value) != true)) {
                    this.RuaField = value;
                    this.RaisePropertyChanged("Rua");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefone {
            get {
                return this.TelefoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefoneField, value) != true)) {
                    this.TelefoneField = value;
                    this.RaisePropertyChanged("Telefone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PedidoWS", Namespace="http://schemas.datacontract.org/2004/07/TCCWS")]
    public partial class PedidoWS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DataEmissaoField;
        
        private System.DateTime DataPagoField;
        
        private string IdField;
        
        private string IdClienteField;
        
        private int IdVendedorField;
        
        private string NumeroField;
        
        private string ObservacoesField;
        
        private decimal ValorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataEmissao {
            get {
                return this.DataEmissaoField;
            }
            set {
                if ((this.DataEmissaoField.Equals(value) != true)) {
                    this.DataEmissaoField = value;
                    this.RaisePropertyChanged("DataEmissao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataPago {
            get {
                return this.DataPagoField;
            }
            set {
                if ((this.DataPagoField.Equals(value) != true)) {
                    this.DataPagoField = value;
                    this.RaisePropertyChanged("DataPago");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCliente {
            get {
                return this.IdClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.IdClienteField, value) != true)) {
                    this.IdClienteField = value;
                    this.RaisePropertyChanged("IdCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVendedor {
            get {
                return this.IdVendedorField;
            }
            set {
                if ((this.IdVendedorField.Equals(value) != true)) {
                    this.IdVendedorField = value;
                    this.RaisePropertyChanged("IdVendedor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroField, value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observacoes {
            get {
                return this.ObservacoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservacoesField, value) != true)) {
                    this.ObservacoesField = value;
                    this.RaisePropertyChanged("Observacoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valor {
            get {
                return this.ValorField;
            }
            set {
                if ((this.ValorField.Equals(value) != true)) {
                    this.ValorField = value;
                    this.RaisePropertyChanged("Valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProdutoWS", Namespace="http://schemas.datacontract.org/2004/07/TCCWS")]
    public partial class ProdutoWS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal EstoqueField;
        
        private int IdField;
        
        private string NomeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Estoque {
            get {
                return this.EstoqueField;
            }
            set {
                if ((this.EstoqueField.Equals(value) != true)) {
                    this.EstoqueField = value;
                    this.RaisePropertyChanged("Estoque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProdutoPedidoWS", Namespace="http://schemas.datacontract.org/2004/07/TCCWS")]
    public partial class ProdutoPedidoWS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IdField;
        
        private string IdPedidoField;
        
        private int IdProdutoField;
        
        private decimal QuantidadeField;
        
        private decimal ValorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPedido {
            get {
                return this.IdPedidoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPedidoField, value) != true)) {
                    this.IdPedidoField = value;
                    this.RaisePropertyChanged("IdPedido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProduto {
            get {
                return this.IdProdutoField;
            }
            set {
                if ((this.IdProdutoField.Equals(value) != true)) {
                    this.IdProdutoField = value;
                    this.RaisePropertyChanged("IdProduto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantidade {
            get {
                return this.QuantidadeField;
            }
            set {
                if ((this.QuantidadeField.Equals(value) != true)) {
                    this.QuantidadeField = value;
                    this.RaisePropertyChanged("Quantidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valor {
            get {
                return this.ValorField;
            }
            set {
                if ((this.ValorField.Equals(value) != true)) {
                    this.ValorField = value;
                    this.RaisePropertyChanged("Valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Sincronizar", ReplyAction="http://tempuri.org/IService1/SincronizarResponse")]
        System.IAsyncResult BeginSincronizar(System.Collections.ObjectModel.ObservableCollection<string> atualizacoes, System.DateTime ultimaAtualizacao, System.AsyncCallback callback, object asyncState);
        
        TCCWP.ServiceReference1.Atualizacao EndSincronizar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.IAsyncResult BeginGetData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TCCWP.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SincronizarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SincronizarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TCCWP.ServiceReference1.Atualizacao Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TCCWP.ServiceReference1.Atualizacao)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TCCWP.ServiceReference1.IService1>, TCCWP.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginSincronizarDelegate;
        
        private EndOperationDelegate onEndSincronizarDelegate;
        
        private System.Threading.SendOrPostCallback onSincronizarCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SincronizarCompletedEventArgs> SincronizarCompleted;
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TCCWP.ServiceReference1.IService1.BeginSincronizar(System.Collections.ObjectModel.ObservableCollection<string> atualizacoes, System.DateTime ultimaAtualizacao, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSincronizar(atualizacoes, ultimaAtualizacao, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TCCWP.ServiceReference1.Atualizacao TCCWP.ServiceReference1.IService1.EndSincronizar(System.IAsyncResult result) {
            return base.Channel.EndSincronizar(result);
        }
        
        private System.IAsyncResult OnBeginSincronizar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> atualizacoes = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            System.DateTime ultimaAtualizacao = ((System.DateTime)(inValues[1]));
            return ((TCCWP.ServiceReference1.IService1)(this)).BeginSincronizar(atualizacoes, ultimaAtualizacao, callback, asyncState);
        }
        
        private object[] OnEndSincronizar(System.IAsyncResult result) {
            TCCWP.ServiceReference1.Atualizacao retVal = ((TCCWP.ServiceReference1.IService1)(this)).EndSincronizar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSincronizarCompleted(object state) {
            if ((this.SincronizarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SincronizarCompleted(this, new SincronizarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SincronizarAsync(System.Collections.ObjectModel.ObservableCollection<string> atualizacoes, System.DateTime ultimaAtualizacao) {
            this.SincronizarAsync(atualizacoes, ultimaAtualizacao, null);
        }
        
        public void SincronizarAsync(System.Collections.ObjectModel.ObservableCollection<string> atualizacoes, System.DateTime ultimaAtualizacao, object userState) {
            if ((this.onBeginSincronizarDelegate == null)) {
                this.onBeginSincronizarDelegate = new BeginOperationDelegate(this.OnBeginSincronizar);
            }
            if ((this.onEndSincronizarDelegate == null)) {
                this.onEndSincronizarDelegate = new EndOperationDelegate(this.OnEndSincronizar);
            }
            if ((this.onSincronizarCompletedDelegate == null)) {
                this.onSincronizarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSincronizarCompleted);
            }
            base.InvokeAsync(this.onBeginSincronizarDelegate, new object[] {
                        atualizacoes,
                        ultimaAtualizacao}, this.onEndSincronizarDelegate, this.onSincronizarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TCCWP.ServiceReference1.IService1.BeginGetData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> TCCWP.ServiceReference1.IService1.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TCCWP.ServiceReference1.IService1)(this)).BeginGetData(callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((TCCWP.ServiceReference1.IService1)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync() {
            this.GetDataAsync(null);
        }
        
        public void GetDataAsync(object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, null, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TCCWP.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<TCCWP.ServiceReference1.IService1>, TCCWP.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<TCCWP.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSincronizar(System.Collections.ObjectModel.ObservableCollection<string> atualizacoes, System.DateTime ultimaAtualizacao, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = atualizacoes;
                _args[1] = ultimaAtualizacao;
                System.IAsyncResult _result = base.BeginInvoke("Sincronizar", _args, callback, asyncState);
                return _result;
            }
            
            public TCCWP.ServiceReference1.Atualizacao EndSincronizar(System.IAsyncResult result) {
                object[] _args = new object[0];
                TCCWP.ServiceReference1.Atualizacao _result = ((TCCWP.ServiceReference1.Atualizacao)(base.EndInvoke("Sincronizar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
        }
    }
}
